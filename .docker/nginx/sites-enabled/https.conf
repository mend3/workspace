
server {
  server_name nginx;
  listen 443 ssl http2;
  listen [::]:443 ssl http2;
  access_log /var/log/nginx/https.log json_analytics;

  # HSTS (ngx_http_headers_module is required) (63072000 seconds)
  # add_header Strict-Transport-Security "max-age=63072000" always;
  add_header X-Frame-Options DENY;
  add_header X-Content-Type-Options nosniff;
  add_header X-XSS-Protection "1; mode=block";

  ssl_certificate /etc/nginx/certs/rootCA.pem;
  ssl_certificate_key /etc/nginx/certs/rootCA-key.pem;
  ssl_dhparam /etc/ssl/certs/dhparam.pem;

  ########################################################################
  # from https://cipherlist.eu/                                            #
  ########################################################################

  ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
  ssl_prefer_server_ciphers on;
  ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
  ssl_ecdh_curve secp384r1;
  ssl_session_timeout 10m;
  # about 40000 sessions
  ssl_session_cache shared:SSL:10m;
  ssl_session_tickets off;
  ssl_stapling off;
  ssl_stapling_verify on;
  resolver 8.8.8.8 8.8.4.4 valid=300s;
  resolver_timeout 5s;

  location / {
    expires 7d;
    add_header 'Access-Control-Allow-Origin' 'http://localhost' always;
    add_header 'Access-Control-Allow-Credentials' 'true' always;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
    add_header 'Access-Control-Allow-Headers' 'Authorization, Origin, X-Requested-With, Content-Type, Accept, X-Correlation-ID, X-Tenant-ID' always;
    add_header Cache-Control "public, max-age=604800";
    add_header Content-Security-Policy "default-src 'self';script-src 'self' 'strict-dynamic' https: 'unsafe-inline';script-src-elem 'self' https://ep2.adtrafficquality.google/sodar/sodar2.js https://pagead2.googlesyndication.com/pagead/ https://active-goblin-69.clerk.accounts.dev/ https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js https://www.googletagmanager.com/gtag/js https://cs.iubenda.com/ https://www.iubenda.com/ https://cdn.iubenda.com/ https://accounts.google.com/gsi/client https://devshell.tech https://kit.fontawesome.com/ 'unsafe-inline';script-src-attr 'self' https://devshell.tech;style-src 'self' https: 'unsafe-eval';style-src-elem 'self' https://accounts.google.com/gsi/style https://cdn.tailwindcss.com/ https://devshell.tech 'unsafe-inline' https://fonts.googleapis.com/;style-src-attr 'self' https://devshell.tech 'unsafe-inline';img-src 'self' data: https:;font-src 'self' data: https:;connect-src 'self' https://ep1.adtrafficquality.google/getconfig/sodar https://active-goblin-69.clerk.accounts.dev/ http://localhost https://www.google-analytics.com/g/collect https://idb.iubenda.com/ https://devshell.tech/socket.io/ https://consent.iubenda.com/ https://hits-i.iubenda.com/ ws://devshell.tech https://identitytoolkit.googleapis.com/v1/projects https://ka-f.fontawesome.com/releases/v5.15.4/css/;object-src 'none';frame-ancestors 'self';form-action 'self';upgrade-insecure-requests;block-all-mixed-content;base-uri 'self';frame-src https://www.google.com/ https://ep2.adtrafficquality.google/ https://googleads.g.doubleclick.net/ https://www.iubenda.com/ https://accounts.google.com/;manifest-src 'self';report-uri /csp;report-to csp-endpoint;trusted-types default TrustedScriptURL goog#html 'allow-duplicates';";

    root /usr/share/nginx/html;
    index index.html index.htm;
    try_files $uri $uri/ /index.html;
  }

  location /metrics {
    proxy_pass http://loadbalancer/metrics;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }

  location /stub_status {
    stub_status;
    allow all;
  }

  location ~ /\.ht {
    deny all;
  }

  location = /robots.txt {
    add_header Content-Type text/plain;
    return 200 "User-agent: *\nDisallow: /\n";
  }

  location /api {
    rewrite /api/(.*) /$1 break;
    proxy_http_version 1.1;

    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_cache_bypass $http_upgrade;

    # WebSocket specific settings
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-NginX-Proxy true;

    proxy_redirect off;
    proxy_pass http://loadbalancer;
  }
}
