services:
  ai-context:
    platform: linux/amd64
    container_name: ai-context
    working_dir: /app
    build:
      context: .
      dockerfile: ./.docker/python3/Dockerfile
      target: workspace
      args:
        - VECTOR_TOOL=vector_from_files
    command: python3 -m tools.generators.vector_from_files --root ./vendors --store qdrant --collection workspace_embedding --ignore-dirs "tmp,__pycache__,node_modules" --ignore-files "package-lock.json,yarn.lock,pnpm-lock.yaml"
    environment:
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
      - EMBEDDING_MODEL=sentence-transformers/all-MiniLM-L6-v2
      - EMBEDDING_PROVIDER=fastembed
      - QDRANT_URL=http://qdrant:6333 # only using Qdrant
      # - PGVECTOR_CONNECTION_STRING=postgresql+psycopg2://postgres:postgres@pgvector:5432/vector_db # only when using pgvector
      # - PINECONE_API_KEY=apilocal # only when using Pinecone
    volumes:
      - .:/app
    networks:
      - global
    links:
      - qdrant
    labels:
      logging: "enabled"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    depends_on:
      grafana:
        condition: service_started
      qdrant:
        condition: service_started
  pgvector:
    image: pgvector/pgvector:pg17
    container_name: pgvector-db
    environment:
      - PGUSER=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=vector_db
    ports:
      - '5433:5432'
    networks:
      - global
    healthcheck:
      test: [ 'CMD-SHELL', 'pg_isready' ]
      interval: 1s
      timeout: 5s
      retries: 10
    volumes:
      # - pgvector_data:/var/lib/postgresql/data
      - ./.docker/postgres/schema.sql:/docker-entrypoint-initdb.d/schema.sql
  pinecone:
    image: ghcr.io/pinecone-io/pinecone-local:latest
    container_name: pinecone
    ports:
      - '5081:5081'
    environment:
      - PORT=5081
      - PINECONE_HOST=localhost
      - PINECONE_API_KEY=apilocal
      - PINECONE_ENVIRONMENT=us-east1-gcp
    networks:
      - global
    volumes:
      - pinecone_data:/root/.pinecone
  qdrant:
    image: qdrant/qdrant
    container_name: qdrant
    environment:
      - QDRANT_URL=http://localhost:6333
      - COLLECTION_NAME=workspace_embedding
      - EMBEDDING_MODEL=sentence-transformers/all-MiniLM-L6-v2
      - EMBEDDING_PROVIDER=fastembed
    # volumes:
    #   - qdrant_data:/qdrant/storage
    ports:
      - '6333:6333'
    expose:
      - 6333
    restart: unless-stopped
    networks:
      - global

networks:
  global:
    driver: bridge

volumes:
  pgdata:
  pgvector_data:
  pinecone_data:
