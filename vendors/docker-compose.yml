include:
  - supabase/docker/docker-compose.yml
  - mcp.compose.yml

x-n8n: &service-n8n
  image: n8nio/n8n:latest
  environment:
    - DB_TYPE=postgresdb
    - DB_POSTGRESDB_HOST=postgres
    - DB_POSTGRESDB_USER=${POSTGRES_USER}
    - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD}
    - DB_POSTGRESDB_DATABASE=postgres
    - N8N_DIAGNOSTICS_ENABLED=false
    - N8N_PERSONALIZATION_ENABLED=false
    - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY}
    - N8N_USER_MANAGEMENT_DISABLED=false
    - N8N_SECURE_COOKIE=false
    - N8N_USER_MANAGEMENT_JWT_SECRET=${N8N_USER_MANAGEMENT_JWT_SECRET}
    - N8N_DEFAULT_USER_EMAIL=${N8N_DEFAULT_USER_EMAIL}
    - N8N_DEFAULT_USER_PASSWORD=${N8N_DEFAULT_USER_PASSWORD}
    - N8N_BASIC_AUTH_ACTIVE=false
    - N8N_HOST=n8n.workspace.com
    - N8N_PORT=5678
    - WEBHOOK_URL=${N8N_HOSTNAME:+https://}${N8N_HOSTNAME:-https://n8n.workspace.com}
    - N8N_RUNNERS_ENABLED=true
    - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=false
  labels:
    - 'traefik.enable=true'
    - 'traefik.http.routers.n8n.rule=Host(`n8n.workspace.com`)'
    - 'traefik.http.routers.n8n.service=n8n'
    - 'traefik.http.routers.n8n.entrypoints=websecure'
    - 'traefik.http.routers.n8n.tls=true'
    - 'traefik.http.services.n8n.loadbalancer.server.port=5678'
  depends_on:
    postgres:
      condition: service_healthy

services:
  n8n-migrations:
    <<: *service-n8n
    container_name: n8n-migrations
    entrypoint: /bin/sh
    command:
      - '-c'
      - 'n8n import:credentials --separate --input=/backup/credentials && n8n import:workflow --separate --input=/backup/workflows'
    volumes:
      - ../.docker/n8n/backup:/backup

  n8n:
    <<: *service-n8n
    container_name: n8n
    restart: unless-stopped
    ports:
      - 5678:5678
    expose:
      - 5678
    volumes:
      - n8n_storage:/home/node/.n8n
      - ../.docker/n8n/backup:/backup
      - ../.docker/n8n/shared:/data/shared

  clickhouse:
    image: clickhouse/clickhouse-server
    restart: always
    user: '101:101'
    expose:
      - 8123
      - 9000
      - 9009
    environment:
      CLICKHOUSE_DB: default
      CLICKHOUSE_USER: clickhouse
      CLICKHOUSE_PASSWORD: ${CLICKHOUSE_PASSWORD}
    volumes:
      - clickhouse_data:/var/lib/clickhouse
      - clickhouse_logs:/var/log/clickhouse-server
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8123/ping || exit 1
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 1s

  minio:
    image: minio/minio
    restart: always
    entrypoint: sh
    # create the 'langfuse' bucket before starting the service
    command: -c 'mkdir -p /data/langfuse && minio server --address ":9000" --console-address ":9001" /data'
    expose:
      - 9000
      - 9001
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    volumes:
      - minio_data:/data
    healthcheck:
      test: ['CMD', 'mc', 'ready', 'local']
      interval: 1s
      timeout: 5s
      retries: 5
      start_period: 1s
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.minio.rule=Host(`minio.workspace.com`)'
      - 'traefik.http.routers.minio.entrypoints=web'
      - 'traefik.http.services.minio.loadbalancer.server.port=9000'

volumes:
  n8n_storage:
  clickhouse_data:
  clickhouse_logs:
  minio_data:
