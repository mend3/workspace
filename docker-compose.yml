name: ${NAMESPACE:-}

include:
- profile.compose.yml
- .docker/supabase/docker-compose.yml
- vendors/local-ai.compose.yml
- shared/vectors.compose.yml
- shared/mcp/docker-compose.yml
- vendors/mcp.compose.yml

services:
  traefik:
    image: traefik
    container_name: traefik
    command:
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --metrics.prometheus=true
      - --metrics.prometheus.buckets=0.1,0.3,1.2,5.0
      - --providers.docker=true
      - --providers.docker.watch
      - --providers.docker.exposedbydefault=false
      - --api.dashboard=true
      - --certificatesresolvers.selfsigned.acme.tlschallenge=false
      - --log.level=INFO
      - --accesslog=true
      - --providers.file.filename=/etc/traefik/tls.yml
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - .docker/traefik/config.yaml:/etc/traefik/traefik.yaml:ro
      - .docker/traefik/tls.yaml:/etc/traefik/tls.yaml:ro
      - .docker/traefik/certs:/certs:ro
    labels:
      traefik.enable: true
      traefik.http.routers.traefik.rule: Host(`dashboard.workspace.com`)
      traefik.http.routers.traefik.service: api@internal
      traefik.http.routers.traefik.entrypoints: web
      traefik.http.services.traefik.loadbalancer.server.port: 8080
    logging:
      options:
        max-size: '10m'
        max-file: '3'

  postgres:
    image: postgres:${POSTGRES_VERSION:-latest}
    restart: unless-stopped
    user: postgres
    environment:
      TZ: America/Sao_Paulo
      PGUSER: postgres
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 2s
      timeout: 5s
      retries: 10
    ports:
      - 5432:5432
    expose:
      - 5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
  redis:
    platform: linux/amd64
    image: redislabs/rejson:2.0.6
    command: redis-server --loadmodule /usr/lib/redis/modules/rejson.so --loadmodule /usr/lib/redis/modules/redisearch.so --appendonly yes --maxclients 10000 --timeout 0 --tcp-keepalive 300 --save
    environment:
      - TZ=America/Sao_Paulo
      - REDISTIMESERIES_ARGS="RETENTION_POLICY=20"
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 3s
      timeout: 10s
      retries: 10
    volumes:
      - redis_data:/data
    expose:
      - 6379
    logging:
      driver: 'json-file'
      options:
        max-size: '1m'
        max-file: '1'

  mongo:
    platform: linux/amd64
    image: mongo
    restart: unless-stopped
    expose:
      - 27017
    environment:
      - MONGO_INITDB_DATABASE=${MONGODB_DATABASE}
      - MONGO_INITDB_ROOT_USERNAME=${MONGODB_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGODB_PASSWORD}
    healthcheck:
      test: echo $(mongo --eval 'db.runCommand("ping").ok')
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s

volumes:
  postgres_data:
  redis_data:
