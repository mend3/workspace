services:
  # source https://prometheus.io/docs/prometheus/latest/installation/
  prometheus:
    image: prom/prometheus
    restart: always
    user: root
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.size=256MB'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.service=prometheus"
      - "traefik.http.routers.prometheus.rule=Host(`prometheus.workspace.com`)"
      - "traefik.http.routers.prometheus.entrypoints=websecure"
      - "traefik.http.routers.prometheus.tls=true"
      - "traefik.http.services.prometheus.loadbalancer.server.port=9090"
    expose:
      - 9090
    volumes:
      - ./.docker/prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    networks:
      - internal

  # source https://github.com/prometheus/node_exporter
  # https://github.com/vegasbrianc/prometheus/
  prometheus-node-exporter:
    image: quay.io/prometheus/node-exporter:latest
    restart: always
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - '^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)'
    privileged: true
    expose:
      - 9100
    networks:
      - internal
    depends_on:
      - prometheus

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
    volumes:
      - es_data:/usr/share/elasticsearch/data
    depends_on:
      - logstash
    networks:
      - internal
    expose:
      - 9200
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200/_cluster/health?wait_for_status=yellow&timeout=10s"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  # source https://grafana.com/docs/grafana/latest/installation/docker/
  grafana:
    image: grafana/grafana
    restart: always
    expose:
      - 3000
    environment:
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_BASIC_ENABLED=false
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.service=grafana"
      - "traefik.http.routers.grafana.rule=Host(`grafana.workspace.com`)"
      - "traefik.http.routers.grafana.entrypoints=websecure"
      - "traefik.http.routers.grafana.tls=true"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./.docker/grafana/dashboards:/var/lib/grafana/dashboards
      - ./.docker/grafana/dashboard.yaml:/etc/grafana/provisioning/dashboards/dashboard.yaml
      - ./.docker/grafana/datasource.yaml:/etc/grafana/provisioning/datasources/datasource.yaml
    networks:
      - internal
    depends_on:
      - elasticsearch
      - influxdb
      - loki
      - promtail
      - cadvisor
      - prometheus
      - prometheus-node-exporter

  loki:
    restart: always
    image: grafana/loki:3.0.1
    command: '--config.file=/mnt/config/loki-config.yaml'
    expose:
      - 3100
    volumes:
      - ./.docker/loki/loki-config.yaml:/mnt/config/loki-config.yaml
    extra_hosts:
      - host.docker.internal:host-gateway
    networks:
      - internal

  # source: https://github.com/google/cadvisor
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.2
    restart: always
    depends_on:
      - prometheus
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    expose:
      - 8080
    networks:
      - internal

  influxdb:
    image: influxdb:1.8
    restart: always
    expose:
      - 8086
    environment:
      - INFLUXDB_DB=influxdb
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=admin
      - DOCKER_INFLUXDB_INIT_MODE=setup
    volumes:
      - ./.docker/influxdb/config:/etc/influxdb2
      - ./.tmp/influxdb/data:/var/lib/influxdb2
    networks:
      - internal

  promtail:
    restart: always
    image: grafana/promtail:3.2.1
    command: '--config.file=/mnt/config/promtail-config.yaml'
    volumes:
      - ./.docker/loki/promtail-config.yaml:/mnt/config/promtail-config.yaml
      - ./.tmp/nginx/logs:/var/log/nginx
    networks:
      - internal

  logstash:
    image: docker.elastic.co/logstash/logstash:8.13.0
    volumes:
      - ./.docker/logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    expose:
      - 5000  # For Python TCP logs
    networks:
      - internal
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9600/_node/pipelines"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
      
  filebeat:
    image: docker.elastic.co/beats/filebeat:8.12.0
    container_name: filebeat
    user: root
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - ./.docker/filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
    networks:
      - internal

networks:
  internal:
    driver: bridge

volumes:
  prometheus_data:
  es_data:
  grafana_data:
