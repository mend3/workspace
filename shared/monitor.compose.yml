services:
  # source https://prometheus.io/docs/prometheus/latest/installation/
  prometheus:
    image: prom/prometheus
    restart: always
    user: root
    expose:
      - 9090
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.size=256MB'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.rule=Host(`prometheus.workspace.com`)"
      - "traefik.http.routers.prometheus.entrypoints=web"
      - "traefik.http.routers.prometheus.tls=false"
      - "traefik.http.services.prometheus.loadbalancer.server.port=9090"
    volumes:
      - ./.docker/prometheus/:/etc/prometheus/:ro
      - prometheus_data:/prometheus

  # source https://github.com/prometheus/node_exporter
  # https://github.com/vegasbrianc/prometheus/
  prometheus-node-exporter:
    image: quay.io/prometheus/node-exporter:latest
    restart: always
    expose:
      - 9100
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - '^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)'
    privileged: true
    depends_on:
      - prometheus

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
    expose:
      - 9200
    volumes:
      - es_data:/usr/share/elasticsearch/data
    depends_on:
      - logstash
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200/_cluster/health?wait_for_status=yellow&timeout=10s"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  # source https://grafana.com/docs/grafana/latest/installation/docker/
  grafana:
    image: grafana/grafana
    restart: always
    environment:
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_BASIC_ENABLED=false
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    expose:
      - 3000
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`grafana.workspace.com`)"
      - "traefik.http.routers.grafana.entrypoints=web"
      - "traefik.http.routers.grafana.tls=false"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./.docker/grafana/dashboards:/var/lib/grafana/dashboards:ro
      - ./.docker/grafana/dashboard.yaml:/etc/grafana/provisioning/dashboards/dashboard.yaml:ro
      - ./.docker/grafana/datasource.yaml:/etc/grafana/provisioning/datasources/datasource.yaml:ro
    depends_on:
      - elasticsearch
      - loki
      - cadvisor
      - prometheus
      - logstash

  loki:
    restart: always
    image: grafana/loki:3.0.1
    command: '--config.file=/mnt/config/loki-config.yaml'
    volumes:
      - ./.docker/loki/loki-config.yaml:/mnt/config/loki-config.yaml:ro

  # source: https://github.com/google/cadvisor
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.2
    restart: always
    depends_on:
      - prometheus
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro

  logstash:
    image: docker.elastic.co/logstash/logstash:8.13.0
    expose:
      - 9600
    volumes:
      - ./.docker/logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9600/_node/pipelines"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

volumes:
  prometheus_data:
  es_data:
  grafana_data:
