services:
  waha:
    restart: always
    # https://waha.devlike.pro/docs/how-to/engines/#docker-images
    # https://portal.devlike.pro/docker-image
    image: devlikeapro/waha:latest
    # Add "dns" if you have a problem with resolving "web.whatsapp.com"
    dns:
      - 1.1.1.1
      - 8.8.8.8
    env_file:
      - ./config/waha/.env
    logging:
      driver: 'json-file'
      options:
        max-size: '100m'
        max-file: '10'
    expose:
      - 3000
    volumes:
      # Store sessions in the .sessions folder (comment it if you're using MongoDB)
      - './config/waha/sessions:/app/.sessions'
      # Save media files
      # https://waha.devlike.pro/docs/how-to/storages/#save-media-files-between-the-container-restarts
      - './config/waha/media:/app/.media'
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.waha.rule=Host(`waha.workspace.com`)'
      - 'traefik.http.routers.waha.entrypoints=web'
      - 'traefik.http.services.waha.loadbalancer.server.port=3000'
  precis:
    image: ghcr.io/leozqin/precis:latest
    environment:
      - CONFIG_DIR=/config
      - DATA_DIR=/data
      - RSS_BASE_URL=${RSS_BASE_URL-http://localhost:80}
      - PRECIS_STORAGE_HANDLER=${PRECIS_STORAGE_HANDLER-tinydb}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - SLACK_API_TOKEN=${SLACK_API_TOKEN}
      - JIRA_API_TOKEN=${JIRA_API_TOKEN}
      - JIRA_EMAIL=${JIRA_EMAIL}
      - NTFY_BASE_URL=${NTFY_BASE_URL}
      - NTFY_TOPIC=${NTFY_TOPIC}
      - PRECIS_INTERNAL_PORT=80
      - LLM_PROVIDER=ollama
      - OLLAMA_BASE_URL=http://ollama:11434
      - LLM_MODEL="qwen2.5:7b-instruct-q4_K_M"
    volumes:
      - ./config/precis/data:/data
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.rss.rule=Host(`rss.workspace.com`)'
      - 'traefik.http.routers.rss.entrypoints=web'
      - 'traefik.http.routers.rss.tls=false'
      - 'traefik.http.services.rss.loadbalancer.server.port=80'
    depends_on:
      - ollama
  kuma:
    image: louislam/uptime-kuma:1
    restart: always
    volumes:
      - kuma-data:/app/data
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.kuma.rule=Host(`kuma.workspace.com`)'
      - 'traefik.http.routers.kuma.entrypoints=web'
      - 'traefik.http.routers.kuma.tls=false'
      - 'traefik.http.services.kuma.loadbalancer.server.port=3001'
  docmost:
    image: docmost/docmost:latest
    depends_on:
      - postgres
      - redis
    environment:
      APP_URL: 'http://localhost:3000'
      APP_SECRET: 'a783b2t4983274b92834tf73246tf327'
      DATABASE_URL: 'postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/docmost?schema=public'
      REDIS_URL: 'redis://redis:6379'
    restart: unless-stopped
    volumes:
      - docmost_data:/app/data/storage
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.docmost.rule=Host(`docmost.workspace.com`)'
      - 'traefik.http.routers.docmost.entrypoints=web'
      - 'traefik.http.routers.docmost.tls=false'
      - 'traefik.http.services.docmost.loadbalancer.server.port=3000'
  cron:
    image: alpine
    restart: always
    #
    # To make this work, set STATIC_CRON_TOKEN in your .env file or as an environment variable and replace PLEASE_REPLACE_WITH_32_CHAR_CODE below
    # The STATIC_CRON_TOKEN must be *exactly* 32 characters long
    #
    env_file: ./config/firefly/.env
    command: sh -c "
      apk add tzdata && \
      (ln -s /usr/share/zoneinfo/$$TZ /etc/localtime || true) && \
      echo \"0 3 * * * wget -qO- http://firefly:8080/api/v1/cron/$$STATIC_CRON_TOKEN;echo\"
      | crontab - && \
      crond -f -L /dev/stdout"
  firefly:
    image: fireflyiii/core:latest
    hostname: app
    restart: always
    volumes:
      - firefly_iii_upload:/var/www/html/storage/upload
    env_file: ./config/firefly/.env
    links:
      - redis
      - mysql
      - postgres
      - cron
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.firefly.rule=Host(`firefly.workspace.com`)'
      - 'traefik.http.routers.firefly.entrypoints=web'
      - 'traefik.http.routers.firefly.tls=false'
      - 'traefik.http.services.firefly.loadbalancer.server.port=8080'
  wordpress:
    image: wordpress:latest
    restart: always
    environment:
      WORDPRESS_DB_HOST: 'mysql:3306'
      WORDPRESS_DB_USER: ${MYSQL_USER}
      WORDPRESS_DB_PASSWORD: ${MYSQL_PASSWORD}
      WORDPRESS_DB_NAME: wordpress
    volumes:
      - wordpress-data:/var/www/html
    expose:
      - 80
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.wordpress.rule=Host(`wordpress.workspace.com`)'
      - 'traefik.http.routers.wordpress.entrypoints=web'
      - 'traefik.http.routers.wordpress.tls=false'
      - 'traefik.http.services.wordpress.loadbalancer.server.port=80'
    depends_on:
      - mysql

volumes:
  wordpress-data:
  phpbb-data:
  kuma-data:
  docmost_data:
  firefly_iii_upload:
