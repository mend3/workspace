services:
  ai-context:
    platform: linux/amd64
    container_name: ai-context
    working_dir: /app
    build:
      context: .
      dockerfile: ./.docker/python3/Dockerfile
      args:
        - VECTOR_TOOL=vector_generator
    command: python -m python.generators.vector_from_files --root . --store qdrant --collection workspace_embedding --ignore-dirs "tmp,__pycache__,node_modules" --ignore-files "package-lock.json,yarn.lock,pnpm-lock.yaml"
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
      - EMBEDDING_MODEL=${EMBEDDING_MODEL:-sentence-transformers/all-MiniLM-L6-v2}
      - EMBEDDING_PROVIDER=huggingface
      - QDRANT_URL=${QDRANT_URL:-http://qdrant:6333} # only using Qdrant
      # - PGVECTOR_CONNECTION_STRING=${PGVECTOR_CONNECTION_STRING:-postgresql+psycopg2://postgres:postgres@pgvector:5432/vector_db}
    volumes:
      - .:/app
    networks:
      - internal
    labels:
      logging: 'enabled'
    logging:
      driver: 'json-file'
      options:
        max-size: '10m'
        max-file: '3'
    depends_on:
      pgvector:
        condition: service_healthy
      qdrant:
        condition: service_started
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
  pgvector:
    image: pgvector/pgvector:pg17
    container_name: pgvector-db
    environment:
      TZ: America/Sao_Paulo
      PGUSER: ${POSTGRES_USER}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: vector_db
    expose:
      - 5432
    networks:
      - internal
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready']
      interval: 1s
      timeout: 5s
      retries: 10
    volumes:
      - pgvector_data:/var/lib/postgresql/data
      - ./.docker/postgres/pgvector/:/docker-entrypoint-initdb.d/:ro
  pinecone:
    image: ghcr.io/pinecone-io/pinecone-local:latest
    container_name: pinecone
    expose:
      - 5081
    environment:
      - PORT=5081
      - PINECONE_HOST=${PINECONE_HOST:-localhost}
      - PINECONE_API_KEY=${PINECONE_API_KEY:-apilocal}
      - PINECONE_ENVIRONMENT=${PINECONE_ENVIRONMENT:-us-east1-gcp}
    networks:
      - internal
    volumes:
      - pinecone_data:/root/.pinecone
  qdrant:
    image: qdrant/qdrant
    container_name: qdrant
    environment:
      - QDRANT_URL=${QDRANT_URL:-http://qdrant:6333}
      - COLLECTION_NAME=${WORKSPACE_COLLECTION_NAME}
      - EMBEDDING_MODEL=${EMBEDDING_MODEL:-sentence-transformers/all-MiniLM-L6-v2}
      - EMBEDDING_PROVIDER=${EMBEDDING_PROVIDER:-fastembed}
    volumes:
      - qdrant_data:/qdrant/storage
    ports:
      - '6333:6333'
    expose:
      - 6333
    restart: unless-stopped
    networks:
      - internal

networks:
  internal:
    driver: bridge

volumes:
  pgvector_data:
  pinecone_data:
  qdrant_data:
